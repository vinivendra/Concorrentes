main.cpp:
	Obtem os dados da entrada.
	
thread.cpp:
	Funções para obter os parametros (número de filosofos, pesos, rodar no modo
    uniforme ou proporcional aos pesos).
	Funções para criar e juntar as threads.
	
monitor.cpp:
	Implementar o monitor (baseada no pseudo-codigo). 
		Utilizar <mutex> e <conditional_variable>.
			Só um problema: notify_one não é FIFO!
			
			
Obs:
	Quem controla a quantidade de porções comidas, o monitor ou as threads?
		Acho que tem que ser o monitor.
	Como colocar os pesos no pseudo-codigo do monitor?
		Acho que se colocar um wait(f, peso) (wait com prioridade funciona).

================================================================================

MODIFICAÇÕES:
- Implementei um outro pseudo_codigo do monitor: que tenta pegar os dois garfos
  de uma vez.
- Mudei de <conditional_variable> e <mutex> para pthread_cont e pthread_mutex.
- Está funcionando, para o uniforme, os filosofos comem porcoes parecidas de
  comida, mas verificar r ainda não está funcionando muito bem. Eles comem mais
  que r porções. Tentei destruir as threads, mas fica semáforo preso.

================================================================================

Versão do Daniel:

- Uma fila por garfo
- Cada filósofo tenta pegar os dois garfos. Se não conseguir um deles, solta os
  dois.
- Os garfos são os monitores. Eles só deixam um dos dois filósofos acessar por
  vez.
- Cada filósofo pode acessar um garfo, soltar um garfo e "tentar" acessar um
  garfo.
- Sabemos quantas porções existem, então sabemos o máximo que cada filósofo pode
  comer (proporcionalmente ao seu peso). Se algum filósofo comer demais, ele
  para de comer. Assim, garantimos que no final cada filósofo comeu
  proporcionalmente ao seu peso.

================================================================================

MODIFICAÇÕES:
- Quando não for possível ler o arquivo, as informações são lidas da STDIN. Isso
  é temporário, apenas para facilitar o desenvolvimento no mac :)
- A principio a versão uniforme está funcionando, e a com pesos também. Ambas
  usam a lógica do Daniel (escrita acima), mas vou confirmar com ele amanhã se
  ela está ok.
- Já cuidamos de alguns casos patológicos.
- As impressões na saída padrão estão ok, inclusive a contagem de tempo.


+ Confirmar com o Daniel: se pode mesmo limitar as porcoes de acordo com o peso;
                          se pode usar o monitor do jeito que está.



Por fazer:
- Testar mais casos patológicos: valores muito grandes ou pequenos de n e r, etc
                                 testar com 500 filosofos quebra
